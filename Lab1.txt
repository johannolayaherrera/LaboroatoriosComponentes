Anotaciòn en interfaz ,, para que tengan una Api de google y estandarizar el recurso que consumen como de posicionamiento.

What is considered the best practice in placing the @Transactional annotation? Should I annotate the interface method or the implementation?

**Se crea la inyección sobre la interfaz para ver como obligarlo a que implemente ese método;
se abre la interfaz y se incluyen los métodos que deseamos.

--Se pueden tener diferentes implementaciones que tengan distintas transacciones.


Podria ser una anotaciòn para que todas aquellas que implementen esa interfaz deban crear un mètodo para documentar la clase, o una breve explicaciòn de ella y asì se obliga a documentar.
Talvez para una interface especial.

--------------------
Preguntas
* Nos indican que el psotconstructor se llama  el metodo despues del constructor, pero el constructor se llama cuando aun no hay datos, como se verifica integridad, se tomarìa desde el segundo cuando pierde el foco.
* Al instanciar, porq se llama al instanciar y luego se crea el proxy se puede realizar el postconstructor, como el cargar que no es por inyecciòn. Porque siempre se llama al intanciar en la app
* ...Solo debe llamar metodo y clase, no objeto, estarìa bien. ¿ Como asi que se debe guardar el archivo al final, al final de cada metodo se imprimiria cada log y se acumula ?
*No init se puede hacer sin inyecciòn, sino que identificar por reflecciòn si tiene NotInit y si lo tiene no se hace accesible.
* Para el ùltimo punto al agregar una anotaciòn para interfaz ej: crear un metodo documentaciòn. no se veria en diseño, sino en tiempo de ejecuciòn saldria el error. Es que cuando una clase la implemente agregue por ejemplo un mètodo =?
